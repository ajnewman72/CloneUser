<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_124049_cloneuser.CloneMyUserProfileUtils</api_name>
        <caller_access/>
        <client_callable>true</client_callable>
        <description/>
        <mobile_callable>false</mobile_callable>
        <name>CloneMyUserProfileUtils</name>
        <sandbox_callable>false</sandbox_callable>
        <script><![CDATA[var CloneMyUserProfileUtils= Class.create();
CloneMyUserProfileUtils.prototype = Object.extendsObject(AbstractAjaxProcessor, {

    cloneRolesGroups: function() {
        var usr = this.getParameter("sysparm_usr");
        var usr_ref = this.getParameter("sysparm_usr_ref");
        var override_existing = this.getParameter("sysparm_override_existing") + "";

        if (override_existing === 'true' && !gs.nil(usr)) {
            var clr_roles = this.clearRoles(usr);
            if (!clr_roles)
                return "false";
            var clr_grps = this.clearGroups(usr);
            if (!clr_grps)
                return "false";
        }

        if (!gs.nil(usr) && !gs.nil(usr_ref)) {
            var cpy_grps = this.copyGroups(usr, usr_ref);
            if (!cpy_grps)
                return "false";
			var cpy_roles = this.copyRoles(usr, usr_ref);
            if (!cpy_roles)
                return "false";
        }

        return "true";
    },
//
    clearRoles: function(usr) {
        try {
            var roleGr = new GlideRecord("sys_user_has_role");
            roleGr.addQuery("user", usr);
            roleGr.addQuery("inherited", false);
            roleGr.query();
            roleGr.deleteMultiple();
        } catch (ex) {
			gs.info("Role remove Error: " + ex);
            return false;
        }
        return true;

    },

    clearGroups: function(usr) {
        try {
            var grpGr = new GlideRecord("sys_user_grmember");
            grpGr.addQuery("user", usr);
            grpGr.query();
            gs.info("Grp RC: " + grpGr.getRowCount());
            grpGr.deleteMultiple();
        } catch (ex) {
			gs.info("Group remove Error: " + ex);
            return false;
        }
        return true;

    },

    copyRoles: function(usr, usr_ref) {
        try {
            var roleGr = new GlideRecord("sys_user_has_role");
            roleGr.addQuery("user", usr_ref);
            roleGr.addQuery("inherited", false);
            roleGr.query();
            while (roleGr._next()) {
                var tgtRoleGr = new GlideRecord("sys_user_has_role");
                tgtRoleGr.addQuery("user", usr);
                tgtRoleGr.addQuery("role", roleGr.getValue("role"));
                tgtRoleGr.query();
				
                if (!tgtRoleGr.hasNext()) {
                    tgtRoleGr.initialize();
                    tgtRoleGr.setValue("user", usr);
                    tgtRoleGr.setValue("role", roleGr.getValue("role"));
                    tgtRoleGr.insert();
                }
            }
        } catch (ex) {
			gs.info("Role copy Error: " + ex);
            return false;
        }
        return true;
    },

    copyGroups: function(usr, usr_ref) {
        try {
            var grpGr = new GlideRecord("sys_user_grmember");
            grpGr.addQuery("user", usr_ref);
            grpGr.query();
            while (grpGr._next()) {
                var tgtGrpGr = new GlideRecord("sys_user_grmember");
                tgtGrpGr.addQuery("user", usr);
                tgtGrpGr.addQuery("group", grpGr.getValue("group"));
                tgtGrpGr.query();

                if (!tgtGrpGr.hasNext()) {
                    tgtGrpGr.initialize();
                    tgtGrpGr.setValue("user", usr);
                    tgtGrpGr.setValue("group", grpGr.getValue("group"));
                    tgtGrpGr.insert();
                }
            }
        } catch (ex) {
			gs.info("Group copy Error: " + ex);
            return false;
        }
        return true;
    },

    type: 'CloneMyUserProfileUtils'
});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-02-07 12:09:42</sys_created_on>
        <sys_id>faeb5d4ac3a3121093491d12b40131b3</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>CloneMyUserProfileUtils</sys_name>
        <sys_package display_value="Clone a user" source="x_124049_cloneuser">3e3ff806c323121093491d12b4013146</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Clone a user">3e3ff806c323121093491d12b4013146</sys_scope>
        <sys_update_name>sys_script_include_faeb5d4ac3a3121093491d12b40131b3</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-02-07 12:09:42</sys_updated_on>
    </sys_script_include>
    <sys_es_latest_script action="INSERT_OR_UPDATE">
        <id>faeb5d4ac3a3121093491d12b40131b3</id>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-02-07 12:09:42</sys_created_on>
        <sys_id>034cd9cac3a3121093491d12b40131db</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-02-07 12:09:42</sys_updated_on>
        <table>sys_script_include</table>
        <use_es_latest>true</use_es_latest>
    </sys_es_latest_script>
</record_update>
